{"ast":null,"code":"import _objectSpread from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{Container,Form,Button,Row,Col}from'react-bootstrap';import{useForm}from\"react-hook-form\";import{yupResolver}from'@hookform/resolvers/yup';import*as yup from\"yup\";import axios from'axios';import{useHistory}from'react-router-dom';import{useToasts}from'react-toast-notifications';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var schema=yup.object().shape({name:yup.string().required('Name is required!'),email:yup.string().required('Email is required!').email('Email format was wrong!'),password:yup.string().required('Password is required!').min(3,'Password character is a minimum of 3')});var RegisterPage=function RegisterPage(){var history=useHistory();var _useToasts=useToasts(),addToast=_useToasts.addToast;var _useForm=useForm({resolver:yupResolver(schema)}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var apiUrl,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;apiUrl='https://api.codingthailand.com/api/register';_context.next=4;return axios.post(apiUrl,{name:data.name,email:data.email,password:data.password});case 4:res=_context.sent;addToast(res.data.message,{appearance:'success'});history.replace('/login');_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);addToast(_context.t0.response.data.errors.email[0],{appearance:'error'});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Container,{className:\"mt-4\",children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register\"}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:\"text\"},register(\"name\")),{},{isInvalid:errors.name})),errors.name&&/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.name.message})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:\"email\"},register(\"email\")),{},{isInvalid:errors.email})),errors.email&&/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.email.message})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:\"password\"},register(\"password\")),{},{isInvalid:errors.password})),errors.password&&/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.password.message})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Register\"})]})})}),/*#__PURE__*/_jsx(\"hr\",{})]});};export default RegisterPage;","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/pages/RegisterPage.js"],"names":["React","Container","Form","Button","Row","Col","useForm","yupResolver","yup","axios","useHistory","useToasts","schema","object","shape","name","string","required","email","password","min","RegisterPage","history","addToast","resolver","register","handleSubmit","errors","formState","onSubmit","data","apiUrl","post","res","message","appearance","replace","response"],"mappings":"ydAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,MAA1B,CAAkCC,GAAlC,CAAuCC,GAAvC,KAAkD,iBAAlD,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,SAAT,KAA0B,2BAA1B,C,wFAEA,GAAMC,CAAAA,MAAM,CAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB,CAC9BC,IAAI,CAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CADwB,CAE9BC,KAAK,CAAEV,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,EAA4CC,KAA5C,CAAkD,yBAAlD,CAFuB,CAG9BC,QAAQ,CAAEX,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,EAA+CG,GAA/C,CAAmD,CAAnD,CAAsD,sCAAtD,CAHoB,CAAnB,CAAf,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAEvB,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CACA,eAAqBC,SAAS,EAA9B,CAAQY,QAAR,YAAQA,QAAR,CAEA,aAAyDjB,OAAO,CAAC,CAC7DkB,QAAQ,CAAEjB,WAAW,CAACK,MAAD,CADwC,CAAD,CAAhE,CAAQa,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CAA4CC,MAA5C,UAAgCC,SAAhC,CAA4CD,MAA5C,CAIA,GAAME,CAAAA,QAAQ,0FAAG,iBAAOC,IAAP,iJAEHC,MAFG,CAEM,6CAFN,uBAIStB,CAAAA,KAAK,CAACuB,IAAN,CAAWD,MAAX,CAAkB,CAChChB,IAAI,CAAGe,IAAI,CAACf,IADoB,CAEhCG,KAAK,CAAEY,IAAI,CAACZ,KAFoB,CAGhCC,QAAQ,CAAEW,IAAI,CAACX,QAHiB,CAAlB,CAJT,QAIHc,GAJG,eAUTV,QAAQ,CAACU,GAAG,CAACH,IAAJ,CAASI,OAAV,CAAmB,CAAEC,UAAU,CAAE,SAAd,CAAnB,CAAR,CACAb,OAAO,CAACc,OAAR,CAAgB,QAAhB,EAXS,+EAcTb,QAAQ,CAAC,YAAMc,QAAN,CAAeP,IAAf,CAAoBH,MAApB,CAA2BT,KAA3B,CAAiC,CAAjC,CAAD,CAAsC,CAAEiB,UAAU,CAAE,OAAd,CAAtC,CAAR,CAdS,oEAAH,kBAARN,CAAAA,QAAQ,4CAAd,CAkBA,mBACI,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,KAAC,GAAD,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,CAAjB,uBACI,MAAC,IAAD,EAAM,QAAQ,CAAEH,YAAY,CAACG,QAAD,CAA5B,wBACI,gCADJ,cAEI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,mBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,8BACI,IAAI,CAAC,MADT,EAEQJ,QAAQ,CAAC,MAAD,CAFhB,MAGI,SAAS,CAAEE,MAAM,CAACZ,IAHtB,GAFJ,CAQQY,MAAM,CAACZ,IAAP,eACI,KAAC,IAAD,CAAM,OAAN,CAAc,QAAd,EAAuB,IAAI,CAAC,SAA5B,UACKY,MAAM,CAACZ,IAAP,CAAYmB,OADjB,EATZ,GAFJ,cAkBI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,oBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,8BACI,IAAI,CAAC,OADT,EAEQT,QAAQ,CAAC,OAAD,CAFhB,MAGI,SAAS,CAAEE,MAAM,CAACT,KAHtB,GAFJ,CAQQS,MAAM,CAACT,KAAP,eACI,KAAC,IAAD,CAAM,OAAN,CAAc,QAAd,EAAuB,IAAI,CAAC,SAA5B,UACKS,MAAM,CAACT,KAAP,CAAagB,OADlB,EATZ,GAlBJ,cAkCI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,uBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,8BACI,IAAI,CAAC,UADT,EAEQT,QAAQ,CAAC,UAAD,CAFhB,MAGI,SAAS,CAAEE,MAAM,CAACR,QAHtB,GAFJ,CAQQQ,MAAM,CAACR,QAAP,eACI,KAAC,IAAD,CAAM,OAAN,CAAc,QAAd,EAAuB,IAAI,CAAC,SAA5B,UACKQ,MAAM,CAACR,QAAP,CAAgBe,OADrB,EATZ,GAlCJ,cAkDI,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,sBAlDJ,GADJ,EADJ,EADJ,cA4DI,aA5DJ,GADJ,CAgEH,CA3FD,CA6FA,cAAeb,CAAAA,YAAf","sourcesContent":["import React from 'react'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('Name is required!'),\r\n    email: yup.string().required('Email is required!').email('Email format was wrong!'),\r\n    password: yup.string().required('Password is required!').min(3, 'Password character is a minimum of 3')\r\n});\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const history = useHistory()\r\n    const { addToast } = useToasts()\r\n\r\n    const { register, handleSubmit, formState:{ errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        try{\r\n            const apiUrl = 'https://api.codingthailand.com/api/register'\r\n\r\n            const res = await axios.post(apiUrl,{\r\n                name : data.name,\r\n                email: data.email,\r\n                password: data.password\r\n            })\r\n\r\n            addToast(res.data.message, { appearance: 'success' });\r\n            history.replace('/login')\r\n\r\n        }catch(error){\r\n            addToast(error.response.data.errors.email[0], { appearance: 'error' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <h1>Register</h1>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                {...register(\"name\")} \r\n                                isInvalid={errors.name}\r\n                            />\r\n                            {\r\n                                errors.name && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.name.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control \r\n                                type=\"email\" \r\n                                {...register(\"email\")} \r\n                                isInvalid={errors.email}\r\n                            />\r\n                            {\r\n                                errors.email && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                {...register(\"password\")} \r\n                                isInvalid={errors.password}\r\n                            />\r\n                            {\r\n                                errors.password && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Register\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{Form,Container,Row,Col}from'react-bootstrap';import{useForm}from'react-hook-form';import axios from'axios';import{useHistory}from'react-router-dom';import{useToasts}from'react-toast-notifications';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SUPPORTED_IMAGE_FORMATS=['image/jpeg','image/jpg'];var UploadPage=function UploadPage(){var history=useHistory();var _useToasts=useToasts(),addToast=_useToasts.addToast;var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors,register=_useForm.register;var onSubmit=function onSubmit(data){try{var imgUpload=data.picture[0];var reader=new FileReader();reader.readAsDataURL(imgUpload);reader.onload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var base64Img,urlAPI,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:base64Img=e.target.result;urlAPI='https://api.codingthailand.com/api/upload';_context.next=4;return axios.post(urlAPI,{picture:base64Img});case 4:res=_context.sent;addToast(res.data.data.message,{appearance:'success'});history.replace(\"/\");case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}catch(error){addToast(JSON.stringify(error),{appearance:'error'});}};return/*#__PURE__*/_jsxs(Container,{className:\"mt-4\",children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Upload Image\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 mt-4\",children:/*#__PURE__*/_jsxs(Form.File,{children:[/*#__PURE__*/_jsx(Form.File.Label,{children:\"Choose file picture.\"}),/*#__PURE__*/_jsx(Form.File.Input,_objectSpread(_objectSpread({type:\"file\"},register(\"picture\",{required:'** Please input file picture.',validate:{checkFileType:function checkFileType(value){return value&&SUPPORTED_IMAGE_FORMATS.includes(value[0].type);}}})),{},{isInvalid:errors.picture})),errors.picture&&errors.picture.type===\"required\"&&/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.picture.message}),errors.picture&&errors.picture.type===\"checkFileType\"&&/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Picture was supported only file type .jpg or jpeg.\"})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",type:\"submit\",children:\"Upload...\"})]})]})}),/*#__PURE__*/_jsx(\"hr\",{})]});};export default UploadPage;","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/pages/UploadPage.js"],"names":["React","Form","Container","Row","Col","useForm","axios","useHistory","useToasts","SUPPORTED_IMAGE_FORMATS","UploadPage","history","addToast","handleSubmit","errors","formState","register","onSubmit","data","imgUpload","picture","reader","FileReader","readAsDataURL","onload","e","base64Img","target","result","urlAPI","post","res","message","appearance","replace","error","JSON","stringify","required","validate","checkFileType","value","includes","type"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Container, Row, Col} from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/jpg']\r\n\r\nconst UploadPage = () => {\r\n\r\n    const history = useHistory()\r\n    const { addToast } = useToasts();\r\n\r\n    const { handleSubmit, formState:{ errors }, register } = useForm()\r\n\r\n    const onSubmit = (data) => {\r\n        try {\r\n            let imgUpload = data.picture[0]\r\n\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(imgUpload)\r\n            reader.onload = async (e) => {\r\n    \r\n                let base64Img = e.target.result\r\n                const urlAPI = 'https://api.codingthailand.com/api/upload'\r\n                const res = await axios.post(urlAPI,{\r\n                    picture: base64Img\r\n                })\r\n\r\n                addToast(res.data.data.message, { appearance: 'success' });\r\n                history.replace(\"/\")\r\n            }\r\n        } catch (error) {\r\n            addToast(JSON.stringify(error), { appearance: 'error' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h1>Upload Image</h1>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"mb-3 mt-4\">\r\n                            <Form.File>\r\n                                <Form.File.Label>Choose file picture.</Form.File.Label>\r\n                                <Form.File.Input\r\n                                    type=\"file\"\r\n                                    {...register(\"picture\",{\r\n                                        required: '** Please input file picture.',\r\n                                        validate: {\r\n                                            checkFileType: (value) => {\r\n                                                return value && SUPPORTED_IMAGE_FORMATS.includes(value[0].type)\r\n                                            }\r\n                                        }\r\n                                    })}\r\n                                    isInvalid={errors.picture}\r\n                                />\r\n                                {\r\n                                    errors.picture && errors.picture.type === \"required\" && (\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.picture.message}\r\n                                        </Form.Control.Feedback>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    errors.picture && errors.picture.type === \"checkFileType\" && (\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Picture was supported only file type .jpg or jpeg.\r\n                                        </Form.Control.Feedback>\r\n                                    )\r\n                                }\r\n                            </Form.File>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Upload...</button>\r\n                    </Form>\r\n                </Col>\r\n            </Row><hr/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UploadPage\r\n"]},"metadata":{},"sourceType":"module"}
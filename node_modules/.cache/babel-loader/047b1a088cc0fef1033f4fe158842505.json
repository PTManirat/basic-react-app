{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\create_react_app\\\\my-app\\\\src\\\\guard\\\\auth.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  children,\n  ...rest\n}) {\n  let isAuth = false;\n  const token = JSON.parse(localStorage.getItem('token'));\n\n  if (token) {\n    isAuth = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => isAuth ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/guard/auth.js"],"names":["React","Route","Redirect","PrivateRoute","children","rest","isAuth","token","JSON","parse","localStorage","getItem","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAExD,MAAIC,MAAM,GAAG,KAAb;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;;AACA,MAAGJ,KAAH,EAAS;AACLD,IAAAA,MAAM,GAAG,IAAT;AACH;;AAED,sBACE,QAAC,KAAD,OACMD,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEO,MAAAA;AAAF,KAAD,KACJN,MAAM,GACFF,QADE,gBAGF,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAS,QAAAA,QAAQ,EAAE,QADV;AAEAC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;KA1BqBT,Y","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n\r\n    let isAuth = false\r\n    const token = JSON.parse(localStorage.getItem('token'))\r\n    if(token){\r\n        isAuth = true\r\n    }\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n            isAuth ? (\r\n                children\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n      />\r\n    );\r\n\r\n  }"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\create_react_app\\\\my-app\\\\src\\\\pages\\\\hospital\\\\HospitalPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Pagination from 'react-js-pagination';\nimport axios from 'axios';\nimport { Spinner, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HospitalPage = () => {\n  _s();\n\n  const [hospital, setHospital] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const cancelToken = React.useRef(null); //Pagination\n\n  const [page, setPage] = React.useState(1);\n  const [page_size, setPage_size] = React.useState(15);\n\n  const getData = async (page, page_size) => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`https://api.codingthailand.com/api/hospital2?page=${page}&page_size=${page_size}`, {\n        cancelToken: cancelToken.current.token\n      });\n      setHospital(res.data.data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    cancelToken.current = axios.CancelToken.source();\n    getData(page, page_size);\n    return () => {\n      cancelToken.current.cancel();\n    };\n  }, [page, page_size]);\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Have a problem from server,please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.response.data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hospital Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hospital Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: hospital.map((h, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: h.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: h.code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: h.h_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this)]\n              }, h.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          activePage: this.state.activePage,\n          itemsCountPerPage: 10,\n          totalItemsCount: 450,\n          pageRangeDisplayed: 5,\n          onChange: this.handlePageChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HospitalPage, \"eJjpkrn1kaC30u2E+S7kWjEhCVs=\");\n\n_c = HospitalPage;\nexport default HospitalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HospitalPage\");","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/pages/hospital/HospitalPage.js"],"names":["React","Pagination","axios","Spinner","Table","HospitalPage","hospital","setHospital","useState","loading","setLoading","error","setError","cancelToken","useRef","page","setPage","page_size","setPage_size","getData","res","get","current","token","data","useEffect","CancelToken","source","cancel","response","message","map","h","index","id","code","h_name","state","activePage","handlePageChange","bind"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport axios from 'axios'\r\nimport { Spinner, Table } from 'react-bootstrap'\r\n\r\nconst HospitalPage = () => {\r\n\r\n    const [hospital, setHospital] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(null)\r\n    const cancelToken = React.useRef(null)\r\n\r\n    //Pagination\r\n    const [page, setPage] = React.useState(1)\r\n    const [page_size, setPage_size] = React.useState(15)\r\n\r\n    const getData = async (page,page_size) => {\r\n        try {\r\n            setLoading(true)\r\n            const res = await axios.get(\r\n                `https://api.codingthailand.com/api/hospital2?page=${page}&page_size=${page_size}`,\r\n                {\r\n                    cancelToken: cancelToken.current.token  \r\n                }\r\n            )\r\n            setHospital(res.data.data)\r\n        } catch (error){\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        cancelToken.current = axios.CancelToken.source()\r\n        getData(page,page_size)\r\n\r\n        return () =>  {\r\n            cancelToken.current.cancel()\r\n        }\r\n\r\n    },[page,page_size])\r\n\r\n    if(loading === true){\r\n        return(\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <p>Have a problem from server,please try again.</p>\r\n                <p>{error.response.data.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h2>Hospital Lists</h2>\r\n                    <Table striped bordered hover size=\"sm\" className=\"mt-4\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Code</th>\r\n                                <th>Hospital Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                               hospital.map((h, index) => {\r\n                                    return (\r\n                                        <tr key={h.id}>\r\n                                            <td>{h.id}</td>\r\n                                            <td>{h.code}</td>\r\n                                            <td>{h.h_name}</td>\r\n                                        </tr>\r\n                                    )\r\n                               }) \r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <br />\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={450}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange.bind(this)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HospitalPage\r\n"]},"metadata":{},"sourceType":"module"}
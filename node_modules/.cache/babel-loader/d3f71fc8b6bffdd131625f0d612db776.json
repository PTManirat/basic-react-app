{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\create_react_app\\\\my-app\\\\src\\\\pages\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required('Name is required!')\n});\n\nconst RegisterPage = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = async data => {\n    const apiUrl = 'https://api.codingthailand.com/api/category';\n    const res = await axios.post(apiUrl, {\n      name: data.newsCatename\n    });\n    alert(res.data.message);\n    history.replace('/category');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ...register(\"name\"),\n              placeholder: \"Please, enter name.\",\n              isInvalid: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"m6+RkrMAcVpGoMVUqeQnaPE5mlw=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/pages/RegisterPage.js"],"names":["React","Container","Form","Button","Row","Col","useForm","yupResolver","yup","axios","useHistory","schema","object","shape","name","string","required","RegisterPage","history","register","handleSubmit","formState","errors","resolver","onSubmit","data","apiUrl","res","post","newsCatename","alert","message","replace"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,EAAAA,IAAI,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AADwB,CAAnB,CAAf;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAC;AAAEC,MAAAA;AAAF;AAApC,MAAmDhB,OAAO,CAAC;AAC7DiB,IAAAA,QAAQ,EAAEhB,WAAW,CAACI,MAAD;AADwC,GAAD,CAAhE;;AAIA,QAAMa,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC7B,UAAMC,MAAM,GAAG,6CAAf;AAEA,UAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAWF,MAAX,EAAkB;AAChCZ,MAAAA,IAAI,EAAGW,IAAI,CAACI;AADoB,KAAlB,CAAlB;AAIAC,IAAAA,KAAK,CAACH,GAAG,CAACF,IAAJ,CAASM,OAAV,CAAL;AACAb,IAAAA,OAAO,CAACc,OAAR,CAAgB,WAAhB;AACH,GATD;;AAWA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEZ,YAAY,CAACI,QAAD,CAA5B;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,cAAA,IAAI,EAAC,MADT;AAAA,iBAEQL,QAAQ,CAAC,MAAD,CAFhB;AAGI,cAAA,WAAW,EAAC,qBAHhB;AAII,cAAA,SAAS,EAAEG,MAAM,CAACR;AAJtB;AAAA;AAAA;AAAA;AAAA,oBAFJ,EASQQ,MAAM,CAACR,IAAP,iBACI,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,cAAA,IAAI,EAAC,SAA5B;AAAA,wBACKQ,MAAM,CAACR,IAAP,CAAYiB;AADjB;AAAA;AAAA;AAAA;AAAA,oBAVZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAmBI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA6BI;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CApDD;;GAAMd,Y;UAEcP,U,EAEyCJ,O;;;KAJvDW,Y;AAsDN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('Name is required!')\r\n});\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { register, handleSubmit, formState:{ errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        const apiUrl = 'https://api.codingthailand.com/api/category'\r\n\r\n        const res = await axios.post(apiUrl,{\r\n            name : data.newsCatename\r\n        })\r\n\r\n        alert(res.data.message)\r\n        history.replace('/category')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <h1>Register</h1>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                {...register(\"name\")} \r\n                                placeholder=\"Please, enter name.\" \r\n                                isInvalid={errors.name}\r\n                            />\r\n                            {\r\n                                errors.name && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.name.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n"]},"metadata":{},"sourceType":"module"}
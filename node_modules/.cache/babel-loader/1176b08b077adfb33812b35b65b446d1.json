{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\create_react_app\\\\my-app\\\\src\\\\pages\\\\category\\\\IndexPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Pagination from 'react-js-pagination';\nimport axios from 'axios';\nimport { Spinner, Table } from 'react-bootstrap'; // const pageSize = 10\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IndexPage = () => {\n  _s();\n\n  const [category, setCategory] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const cancelToken = React.useRef(null); //Pagination\n  // const [page, setPage] = React.useState(1)\n  // const [total, setTotal] = React.useState(0)\n\n  const getData = async page => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`https://api.codingthailand.com/api/category`, {\n        cancelToken: cancelToken.current.token\n      });\n      setCategory(res.data); // setTotal(res.data.meta.pagination.total)\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    cancelToken.current = axios.CancelToken.source();\n    getData();\n    return () => {\n      cancelToken.current.cancel();\n    };\n  }, []);\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Have a problem from server,please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.response.data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  } // const handlePageChange = (pageNumber) => {\n  //     setPage(pageNumber)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Category Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: category.map((c, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: c.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: c.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this)]\n              }, c.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IndexPage, \"BWucnXX2OLWpKaA3x4Y8Gyxbxa4=\");\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/pages/category/IndexPage.js"],"names":["React","Pagination","axios","Spinner","Table","IndexPage","category","setCategory","useState","loading","setLoading","error","setError","cancelToken","useRef","getData","page","res","get","current","token","data","useEffect","CancelToken","source","cancel","response","message","map","c","index","id","name"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport axios from 'axios'\r\nimport { Spinner, Table } from 'react-bootstrap'\r\n\r\n// const pageSize = 10\r\n\r\nconst IndexPage = () => {\r\n\r\n    const [category, setCategory] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(null)\r\n    const cancelToken = React.useRef(null)\r\n\r\n    //Pagination\r\n    // const [page, setPage] = React.useState(1)\r\n    // const [total, setTotal] = React.useState(0)\r\n\r\n    const getData = async (page) => {\r\n        try {\r\n            setLoading(true)\r\n            const res = await axios.get(\r\n                `https://api.codingthailand.com/api/category`,\r\n                {\r\n                    cancelToken: cancelToken.current.token  \r\n                }\r\n            )\r\n            setCategory(res.data)\r\n            // setTotal(res.data.meta.pagination.total)\r\n        } catch (error){\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        cancelToken.current = axios.CancelToken.source()\r\n        getData()\r\n\r\n        return () =>  {\r\n            cancelToken.current.cancel()\r\n        }\r\n\r\n    },[])\r\n\r\n    if(loading === true){\r\n        return(\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <p>Have a problem from server,please try again.</p>\r\n                <p>{error.response.data.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // const handlePageChange = (pageNumber) => {\r\n    //     setPage(pageNumber)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h2>Category Lists</h2>\r\n                    <Table striped bordered hover size=\"sm\" className=\"mt-4\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Category Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                               category.map((c, index) => {\r\n                                    return (\r\n                                        <tr key={c.id}>\r\n                                            <td>{c.id}</td>\r\n                                            <td>{c.name}</td>\r\n                                        </tr>\r\n                                    )\r\n                               }) \r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <br />\r\n                    {/* <Pagination\r\n                        activePage={page}\r\n                        itemsCountPerPage={pageSize}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={10}\r\n                        onChange={handlePageChange}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        // firstPageText=\"first\"\r\n                        // lastPageText=\"last\"\r\n                        prevPageText=\"previous\"\r\n                        nextPageText=\"next\"\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexPage\r\n"]},"metadata":{},"sourceType":"module"}
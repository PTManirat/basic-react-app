{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\create_react_app\\\\my-app\\\\src\\\\pages\\\\UploadPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Container, Row, Col } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form'; // import axios from 'axios'\n// import { useHistory } from 'react-router-dom'\n// const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/jpg']\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadPage = () => {\n  _s();\n\n  // const history = useHistory()\n  const {\n    handleSubmit,\n    formState: {\n      errors\n    },\n    register\n  } = useForm();\n  console.log(errors);\n\n  const onSubmit = data => {\n    console.log(\"upload\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n                children: \"Choose file picture.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.File.Input, {\n                type: \"file\",\n                ...register(\"picture\", {\n                  required: '** Please input file image.' // validate: {\n                  //     checkFileType: (value) => {\n                  //         return value && SUPPORTED_IMAGE_FORMATS.includes(value[0].type)\n                  //     }\n                  // }\n\n                }),\n                isInvalid: errors.picture,\n                id: \"upload-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this), errors.picture( /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.picture.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Upload...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadPage, \"IOJcP57T0ryIjYX2blcn2hO60Zo=\", false, function () {\n  return [useForm];\n});\n\n_c = UploadPage;\nexport default UploadPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/pages/UploadPage.js"],"names":["React","Form","Container","Row","Col","useForm","UploadPage","handleSubmit","formState","errors","register","console","log","onSubmit","data","required","picture","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CACA;AACA;AAEA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB;AAEA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAS,EAAC;AAAEC,MAAAA;AAAF,KAA1B;AAAsCC,IAAAA;AAAtC,MAAmDL,OAAO,EAAhE;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAEA,QAAMI,QAAQ,GAAIC,IAAD,IAAU;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEL,YAAY,CAACM,QAAD,CAA5B;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sCACI,QAAC,IAAD,CAAM,IAAN,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,IAAN,CAAW,KAAX;AACI,gBAAA,IAAI,EAAC,MADT;AAAA,mBAEQH,QAAQ,CAAC,SAAD,EAAW;AACnBK,kBAAAA,QAAQ,EAAE,6BADS,CAEnB;AACA;AACA;AACA;AACA;;AANmB,iBAAX,CAFhB;AAUI,gBAAA,SAAS,EAAEN,MAAM,CAACO,OAVtB;AAWI,gBAAA,EAAE,EAAC;AAXP;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAgBQP,MAAM,CAACO,OAAP,eACI,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,gBAAA,IAAI,EAAC,SAA5B;AAAA,0BACKP,MAAM,CAACO,OAAP,CAAeC;AADpB;AAAA;AAAA;AAAA;AAAA,sBADJ,CAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAiCI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAwCU;AAAA;AAAA;AAAA;AAAA,YAxCV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH,CAxDD;;GAAMX,U;UAIuDD,O;;;KAJvDC,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { Form, Container, Row, Col} from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\n// import axios from 'axios'\r\n// import { useHistory } from 'react-router-dom'\r\n\r\n// const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/jpg']\r\n\r\nconst UploadPage = () => {\r\n\r\n    // const history = useHistory()\r\n\r\n    const { handleSubmit, formState:{ errors }, register } = useForm()\r\n\r\n    console.log(errors)\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"upload\")\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h1>Upload Image</h1>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"mb-3 mt-4\">\r\n                            <Form.File>\r\n                                <Form.File.Label>Choose file picture.</Form.File.Label>\r\n                                <Form.File.Input\r\n                                    type=\"file\"\r\n                                    {...register(\"picture\",{\r\n                                        required: '** Please input file image.'\r\n                                        // validate: {\r\n                                        //     checkFileType: (value) => {\r\n                                        //         return value && SUPPORTED_IMAGE_FORMATS.includes(value[0].type)\r\n                                        //     }\r\n                                        // }\r\n                                    })}\r\n                                    isInvalid={errors.picture}\r\n                                    id=\"upload-image\"\r\n                                />\r\n                                {\r\n                                    errors.picture (\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.picture.message}\r\n                                        </Form.Control.Feedback>\r\n                                    )\r\n                                }\r\n                                {/* {\r\n                                    errors.picture && errors.picture.type === \"checkFileType\" (\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Picture supported only file type .jpg or jpeg.\r\n                                        </Form.Control.Feedback>\r\n                                    )\r\n                                } */}\r\n                            </Form.File>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Upload...</button>\r\n                    </Form>\r\n                </Col>\r\n            </Row><hr/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UploadPage\r\n"]},"metadata":{},"sourceType":"module"}
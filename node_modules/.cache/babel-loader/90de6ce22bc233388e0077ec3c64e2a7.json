{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cartReducer']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst configureStore = () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n};\n\nexport default configureStore;","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/redux/configureStore.js"],"names":["createStore","applyMiddleware","persistStore","persistReducer","storage","thunk","rootReducer","persistConfig","key","whitelist","persistedReducer","configureStore","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAChD,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBJ,EAAAA,OAFkB;AAGlBK,EAAAA,SAAS,EAAE,CAAC,aAAD;AAHO,CAAtB;AAMA,MAAMC,gBAAgB,GAAGP,cAAc,CAACI,aAAD,EAAgBD,WAAhB,CAAvC;;AAEA,MAAMK,cAAc,GAAG,MAAM;AACzB,MAAIC,KAAK,GAAGZ,WAAW,CAACU,gBAAD,EAAmBT,eAAe,CAACI,KAAD,CAAlC,CAAvB;AACA,MAAIQ,SAAS,GAAGX,YAAY,CAACU,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACH,CAJD;;AAMA,eAAeF,cAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport thunk from 'redux-thunk';\r\n \r\nimport rootReducer from './reducers/index'\r\n \r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['cartReducer']\r\n}\r\n \r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n \r\nconst configureStore = () => {\r\n    let store = createStore(persistedReducer, applyMiddleware(thunk))\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n}\r\n\r\nexport default configureStore"]},"metadata":{},"sourceType":"module"}
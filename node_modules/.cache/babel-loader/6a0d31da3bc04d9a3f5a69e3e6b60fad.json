{"ast":null,"code":"import _objectSpread from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/reactPractice/create_react_app/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{Container,Form,Button,Row,Col}from'react-bootstrap';import{useForm}from\"react-hook-form\";import{yupResolver}from'@hookform/resolvers/yup';import*as yup from\"yup\";import axios from'axios';import{useHistory}from'react-router-dom';import{useToasts}from'react-toast-notifications';// import { UserStoreContext } from '../context/UserContext'\nimport{useDispatch}from'react-redux';import{updateProfile}from'../redux/actions/authAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var schema=yup.object().shape({email:yup.string().required('Email is required!').email('Email format was wrong!'),password:yup.string().required('Password is required!').min(3,'Password character is a minimum of 3')});var LoginPage=function LoginPage(){var history=useHistory();var _useToasts=useToasts(),addToast=_useToasts.addToast;// const userStore = React.useContext(UserStoreContext)\n//call redux action\nvar dispatch=useDispatch();var _useForm=useForm({resolver:yupResolver(schema)}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var urlLogin,res,urlProfile,res_profile,profileVal;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;urlLogin='https://api.codingthailand.com/api/login';_context.next=4;return axios.post(urlLogin,{email:data.email,password:data.password});case 4:res=_context.sent;//keep token in localstorage convert json to string\nlocalStorage.setItem('token',JSON.stringify(res.data));//get profie\nurlProfile='https://api.codingthailand.com/api/profile';_context.next=9;return axios.get(urlProfile,{headers:{Authorization:'Bearer '+res.data.access_token}});case 9:res_profile=_context.sent;localStorage.setItem('profile',JSON.stringify(res_profile.data.data.user));addToast(\"Log In success!!!\",{appearance:'success'});// history.replace('/')\n// history.go(0)\n//update profile by Context\n// const profileVal = JSON.parse(localStorage.getItem('profile'))\n// userStore.updateProfile(profileVal)\n// history.replace('/')\n//update profile by Redux action\nprofileVal=JSON.parse(localStorage.getItem('profile'));dispatch(updateProfile(profileVal));history.replace('/');_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](0);addToast(_context.t0.response.data.message,{appearance:'error'});case 20:case\"end\":return _context.stop();}}},_callee,null,[[0,17]]);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Container,{className:\"mt-4\",children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xs:12,md:6,children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Log In\"}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:\"email\"},register(\"email\")),{},{isInvalid:errors.email})),errors.email&&/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.email.message})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,_objectSpread(_objectSpread({type:\"password\"},register(\"password\")),{},{isInvalid:errors.password})),errors.password&&/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:errors.password.message})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Submit\"})]})})}),/*#__PURE__*/_jsx(\"hr\",{})]});};export default LoginPage;","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/pages/LoginPage.js"],"names":["React","Container","Form","Button","Row","Col","useForm","yupResolver","yup","axios","useHistory","useToasts","useDispatch","updateProfile","schema","object","shape","email","string","required","password","min","LoginPage","history","addToast","dispatch","resolver","register","handleSubmit","errors","formState","onSubmit","data","urlLogin","post","res","localStorage","setItem","JSON","stringify","urlProfile","get","headers","Authorization","access_token","res_profile","user","appearance","profileVal","parse","getItem","replace","response","message"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\n// import { UserStoreContext } from '../context/UserContext'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateProfile } from '../redux/actions/authAction'\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .required('Email is required!')\r\n        .email('Email format was wrong!'),\r\n    password: yup\r\n        .string()\r\n        .required('Password is required!')\r\n        .min(3, 'Password character is a minimum of 3')\r\n});\r\n\r\nconst LoginPage = () => {\r\n\r\n    const history = useHistory()\r\n    const { addToast } = useToasts()\r\n    // const userStore = React.useContext(UserStoreContext)\r\n    \r\n    //call redux action\r\n    const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, formState:{ errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        try{\r\n            const urlLogin = 'https://api.codingthailand.com/api/login'\r\n\r\n            const res = await axios.post(urlLogin,{\r\n                email: data.email,\r\n                password: data.password\r\n            })\r\n\r\n            //keep token in localstorage convert json to string\r\n            localStorage.setItem('token', JSON.stringify(res.data))\r\n\r\n            //get profie\r\n            const urlProfile = 'https://api.codingthailand.com/api/profile'\r\n            const res_profile = await axios.get(urlProfile,{\r\n                headers: {\r\n                    Authorization: 'Bearer ' + res.data.access_token\r\n                }\r\n            })\r\n\r\n            localStorage.setItem('profile', JSON.stringify(res_profile.data.data.user))\r\n\r\n            addToast(\"Log In success!!!\", { appearance: 'success' });\r\n            // history.replace('/')\r\n            // history.go(0)\r\n\r\n            //update profile by Context\r\n            // const profileVal = JSON.parse(localStorage.getItem('profile'))\r\n            // userStore.updateProfile(profileVal)\r\n            // history.replace('/')\r\n\r\n            //update profile by Redux action\r\n            const profileVal = JSON.parse(localStorage.getItem('profile'))\r\n            dispatch(updateProfile(profileVal))\r\n            history.replace('/')\r\n\r\n        }catch(error){\r\n            addToast(error.response.data.message, { appearance: 'error' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <h1>Log In</h1>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control \r\n                                type=\"email\" \r\n                                {...register(\"email\")} \r\n                                isInvalid={errors.email}\r\n                            />\r\n                            {\r\n                                errors.email && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                {...register(\"password\")} \r\n                                isInvalid={errors.password}\r\n                            />\r\n                            {\r\n                                errors.password && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n"]},"metadata":{},"sourceType":"module"}
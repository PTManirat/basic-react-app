{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\create_react_app\\\\my-app\\\\src\\\\components\\\\Footer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Footer = props => {\n  const {\n    title,\n    website,\n    postcode,\n    isOpen\n  } = props; // destructurig assign\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: styles.title,\n      children: [title, \" \\xA9 \", new Date().getFullYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [website, \" \", postcode, \" is open = \", isOpen.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Footer;\nconst styles = {\n  title: {\n    color: 'red',\n    fontSize: 50\n  }\n};\nFooter.propTypes = {\n  title: PropTypes.string,\n  website: PropTypes.string,\n  postcode: PropTypes.number,\n  isOpen: PropTypes.bool\n};\nexport default Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["D:/reactPractice/create_react_app/my-app/src/components/Footer.js"],"names":["React","PropTypes","Footer","props","title","website","postcode","isOpen","styles","Date","getFullYear","toString","color","fontSize","propTypes","string","number","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEpB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAAqCJ,KAA3C,CAFoB,CAE6B;;AAEjD,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAEK,MAAM,CAACJ,KAAlB;AAAA,iBAA0BA,KAA1B,YAAyC,IAAIK,IAAJ,GAAWC,WAAX,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBAAIL,OAAJ,OAAcC,QAAd,iBAAmCC,MAAM,CAACI,QAAP,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAXD;;KAAMT,M;AAaN,MAAMM,MAAM,GAAG;AACXJ,EAAAA,KAAK,EAAG;AACJQ,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AADG,CAAf;AAOAX,MAAM,CAACY,SAAP,GAAmB;AACfV,EAAAA,KAAK,EAAEH,SAAS,CAACc,MADF;AAEfV,EAAAA,OAAO,EAAEJ,SAAS,CAACc,MAFJ;AAGfT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,MAHL;AAIfT,EAAAA,MAAM,EAAEN,SAAS,CAACgB;AAJH,CAAnB;AAOA,eAAef,MAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Footer = props => {\r\n\r\n    const {title, website, postcode, isOpen} = props // destructurig assign\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={styles.title}>{title} &copy; {new Date().getFullYear()}</h3>\r\n            <p>{website} {postcode} is open = {isOpen.toString()}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst styles = {\r\n    title : {\r\n        color: 'red',\r\n        fontSize: 50\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    title: PropTypes.string,\r\n    website: PropTypes.string,\r\n    postcode: PropTypes.number,\r\n    isOpen: PropTypes.bool\r\n};\r\n\r\nexport default Footer\r\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["redux/actions/authAction.js","components/Footer.js","components/NavBar.js","pages/HomePage.js","pages/AboutPage.js","redux/actions/cartAction.js","pages/ProductPage.js","pages/DetailPage.js","pages/hospital/HospitalPage.js","pages/CartPage.js","pages/category/IndexPage.js","pages/category/CreatePage.js","pages/category/EditPage.js","pages/UploadPage.js","pages/RegisterPage.js","pages/LoginPage.js","pages/MemberPage.js","guard/auth.js","context/UserContext.js","redux/reducers/authReducer.js","redux/reducers/cartReducer.js","redux/reducers/index.js","redux/configureStore.js","pages/report/PdfReport.js","pages/report/ChartReport.js","App.js","reportWebVitals.js","index.js"],"names":["GET_PROFILE","GET_VERSION","updateProfile","profile","type","payload","Footer","props","dispatch","useDispatch","version","useSelector","state","authReducer","React","useEffect","a","axios","get","res","data","className","Date","getFullYear","NavBar","history","useHistory","profileRedux","cartRedux","cartReducer","total","profileVal","JSON","parse","localStorage","getItem","getProfile","Navbar","bg","expand","to","exact","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","activeClassName","NavDropdown","title","Item","onClick","replace","Divider","name","Button","variant","removeItem","HomePage","query","useQuery","controller","AbortController","signal","promise","fetch","method","then","json","cancel","abort","isLoading","error","isFetching","Spinner","animation","stringify","role","color","size","map","d","index","topic","detail","AboutPage","useState","setVersion","getData","ADD_TO_CART","CLEAR_ALL_CART","ProductPage","product","setProduct","loading","setLoading","setError","cancelToken","useRef","cartlist","current","token","console","log","CancelToken","source","response","message","addCart","p","price","view","qty","cart","exists","length","c","push","reduce","totalQty","addToCart","Table","striped","bordered","hover","format","date","locale","th","Badge","Image","picture","rounded","DetailPage","useParams","setDetail","goBack","CardDeck","Card","Body","Title","ch_title","Text","ch_dateadd","ch_id","HospitalPage","hospital","setHospital","page","setPage","setTotal","meta","pagination","h","code","h_name","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","pageNumber","itemClass","linkClass","prevPageText","nextPageText","CartPage","IndexPage","category","setCategory","window","confirm","delete","alert","go","schema","yup","shape","newsCatename","required","CreatePage","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","post","Container","Row","Col","xs","md","Form","Group","controlId","Label","Control","placeholder","isInvalid","Feedback","EditPage","setValue","useCallback","put","SUPPORTED_IMAGE_FORMATS","UploadPage","addToast","useToasts","imgUpload","reader","FileReader","readAsDataURL","onload","e","base64Img","target","result","appearance","File","Input","validate","checkFileType","value","includes","email","password","min","RegisterPage","LoginPage","setItem","headers","Authorization","access_token","res_profile","user","MemberPage","PrivateRoute","children","rest","isAuth","render","location","pathname","from","UserStoreContext","createContext","UserStoreProvider","setProfile","userStore","Provider","initState","action","rootReducer","combineReducers","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","configureStore","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","styles","StyleSheet","create","backgroundColor","fontFamily","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","marginBottom","container","alignSelf","Font","family","fonts","PdfReport","cartLists","style","weighting","getContent","r","uv","pv","amt","ChartReport","LineChart","Line","dataKey","stroke","strokeWidth","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Legend","activeDot","queryClient","QueryClient","App","autoDismiss","autoDismissTimeout","QueryClientProvider","client","path","url","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6cedec73.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const GET_VERSION = 'GET_VERSION'\r\n\r\nexport const updateProfile = (profile) => {\r\n    return {\r\n        type: GET_PROFILE,\r\n        payload: {\r\n            profile: profile\r\n        }\r\n    }\r\n}\r\n\r\nexport const getVersion = () => {\r\n\r\n    return async (dispatch) => {\r\n        const res = await axios.get('https://api.codingthailand.com/api/version')\r\n        dispatch({\r\n            type: GET_VERSION,\r\n            payload: {\r\n                version: res.data.data.version\r\n            }\r\n        })\r\n    }\r\n    // return {\r\n    //     type: GET_VERSION,\r\n    //     payload: {\r\n    //         version: '1.0.0'\r\n    //     }\r\n    // }\r\n}","import React from 'react'\r\nimport { getVersion } from '../redux/actions/authAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Footer = props => {\r\n\r\n    const dispatch = useDispatch()\r\n    const version = useSelector((state) => state.authReducer.version)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getVersion())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <footer className=\"container\">\r\n                <p>© Patty Racy Company {new Date().getFullYear()} version : {version}</p>\r\n            </footer>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport { Navbar, Nav, NavDropdown, Button } from 'react-bootstrap'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\n// import { UserStoreContext } from '../context/UserContext'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateProfile } from '../redux/actions/authAction'\r\n\r\nconst NavBar = () => {\r\n\r\n  const history = useHistory()\r\n  // const [profile, setProfile] = React.useState(null)\r\n  // const userStore = React.useContext(UserStoreContext)\r\n\r\n  //redux\r\n  const profileRedux = useSelector((state) => state.authReducer.profile)\r\n  const dispatch = useDispatch()\r\n  const cartRedux = useSelector((state) => state.cartReducer.total)\r\n  // <-------------------- context section ------------------------>\r\n  // const getProfile = () => {\r\n\r\n  //   const profileVal = JSON.parse(localStorage.getItem('profile')) \r\n\r\n  //   // if(profileVal){\r\n  //   //   setProfile(profileVal)\r\n  //   // }\r\n\r\n  //   //update data from localStorage to context\r\n  //   if(profileVal){\r\n  //     userStore.updateProfile(profileVal)\r\n  //   }\r\n\r\n  // } \r\n\r\n  // React.useEffect(() => {\r\n  //   getProfile()\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // },[])\r\n  // <-------------------- context section ------------------------>\r\n\r\n  // <-------------------- Redux section ------------------------>\r\n    const getProfile = () => {\r\n\r\n      const profileVal = JSON.parse(localStorage.getItem('profile')) \r\n\r\n      if(profileVal){\r\n        dispatch(updateProfile(profileVal))\r\n      }\r\n\r\n    } \r\n\r\n    React.useEffect(() => {\r\n      getProfile()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n  // <-------------------- Redux section ------------------------>\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('profile')\r\n    history.replace('/')\r\n    // history.go(0)\r\n    // userStore.updateProfile(null)\r\n    dispatch(updateProfile(null))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"warning\" expand=\"lg\">\r\n        <Navbar>\r\n          <NavLink className='navbar-brand' to='/' exact>\r\n            <img\r\n                alt=\"WebTestLogo\"\r\n                src=\"/logo192.png\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n              />{' '}\r\n              Web Test\r\n          </NavLink>\r\n          {/* <Navbar.Brand href=\"#home\">\r\n            <img\r\n              alt=\"WebTestLogo\"\r\n              src=\"/logo192.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{' '}\r\n            Web Test\r\n          </Navbar.Brand> */}\r\n        </Navbar>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavLink className='nav-link' to='/' activeClassName='active' exact>\r\n              Home\r\n            </NavLink>\r\n\r\n            <NavLink className='nav-link' to='/product' activeClassName='active'>\r\n              Products\r\n            </NavLink>\r\n            \r\n            <NavLink className='nav-link' to='/about' activeClassName='active'>\r\n              About\r\n            </NavLink>\r\n\r\n            <NavLink className='nav-link' to='/cart' activeClassName='active'>\r\n              Shopping Cart { cartRedux && cartRedux } items\r\n            </NavLink>\r\n\r\n            <NavDropdown title=\"Workshop (Pagination + CRUD)\" id=\"basic-nav-dropdown\">\r\n\r\n              <NavDropdown.Item \r\n                onClick={() => {\r\n                  history.replace('/hospital')\r\n                }}\r\n              >\r\n                Hospital Detail (Pagination)\r\n              </NavDropdown.Item>\r\n\r\n              <NavDropdown.Divider />\r\n\r\n              <NavDropdown.Item \r\n                onClick={() => {\r\n                  history.replace('/category')\r\n                }}\r\n              >\r\n                News Category (CRUD)\r\n              </NavDropdown.Item>\r\n\r\n            </NavDropdown>\r\n\r\n            <NavLink className='nav-link' to='/upload' activeClassName='active'>\r\n              Upload\r\n            </NavLink>\r\n\r\n            <NavLink className='nav-link' to='/member' activeClassName='active'>\r\n              Member\r\n            </NavLink>\r\n\r\n            <NavLink className='nav-link' to='/chart' activeClassName='active'>\r\n              Chart Report\r\n            </NavLink>\r\n          </Nav>\r\n\r\n          {/* use context */}\r\n          {/* {\r\n            userStore.profile ? (\r\n              <span className=\"navbar-text\">\r\n                Welcome : {userStore.profile.name}\r\n                <Button className=\"ml-2\" variant=\"outline-danger\" onClick={logout}>\r\n                  Log Out\r\n                </Button>\r\n              </span>\r\n            ) : (\r\n              <Nav>\r\n                <NavLink className='nav-link' to='/register' activeClassName='active'>\r\n                  Register\r\n                </NavLink>\r\n                <NavLink className='nav-link' to='/login' activeClassName='active'>\r\n                  Log In\r\n                </NavLink>\r\n              </Nav>\r\n            )\r\n          } */}\r\n\r\n          {\r\n            profileRedux ? (\r\n              <span className=\"navbar-text\">\r\n                Welcome : {profileRedux.name}\r\n                <Button className=\"ml-2\" variant=\"outline-danger\" onClick={logout}>\r\n                  Log Out\r\n                </Button>\r\n              </span>\r\n            ) : (\r\n              <Nav>\r\n                <NavLink className='nav-link' to='/register' activeClassName='active'>\r\n                  Register\r\n                </NavLink>\r\n                <NavLink className='nav-link' to='/login' activeClassName='active'>\r\n                  Log In\r\n                </NavLink>\r\n              </Nav>\r\n            )\r\n          }\r\n\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { FiSmile } from \"react-icons/fi\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useQuery } from 'react-query'\r\nimport { Spinner } from 'react-bootstrap' \r\n\r\nconst HomePage = () => {\r\n\r\n    // const { isLoading, error, data, isFetching } = useQuery('getData', () =>\r\n    //     fetch('https://api.codingthailand.com/api/news?page=1&per_page=3').then(res =>\r\n    //         res.json()\r\n    //     )\r\n    // )\r\n\r\n    const query = useQuery('getData', () => {\r\n        \r\n        const controller = new AbortController()\r\n        const signal = controller.signal\r\n\r\n        const promise = fetch('https://api.codingthailand.com/api/news?page=1&per_page=3',{\r\n            method : 'get',\r\n            signal : signal\r\n        }).then(res =>\r\n            res.json()\r\n        )\r\n\r\n        //cancel request \r\n        promise.cancel = () => controller.abort()\r\n\r\n        return promise\r\n    })\r\n\r\n    const { isLoading, error, data, isFetching } = query\r\n\r\n    if(isLoading === true){\r\n        return(\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <p>Have a problem from server,please try again.</p>\r\n                <p>{JSON.stringify(error)}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main role=\"main\">\r\n                <div className=\"jumbotron\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-3\">Welcome</h1>\r\n                        <p>\r\n                            This website develop by React language. <FiSmile color=\"brown\" size=\"2em\" />\r\n                        </p>\r\n                        <p>\r\n                            {/* <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\r\n                                Learn more »\r\n                            </a> */}\r\n                            <Link to=\"/product\" className=\"btn btn-primary btn-lg\" role=\"button\">\r\n                                All Products »\r\n                            </Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto\">\r\n                            {\r\n                                isFetching ? 'Updating...' : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\r\n                            data.data.map((d,index) => {\r\n                                return(\r\n                                    <div className=\"col-md-4\" key={d.id}>\r\n                                        <h2>{d.topic}</h2>\r\n                                        <p>\r\n                                            {d.detail}\r\n                                        </p>\r\n                                        <p>\r\n                                            Cagetagory : {d.name}\r\n                                        </p>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <hr />\r\n                </div>{\" \"}\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nconst AboutPage = () => {\r\n\r\n    const [version, setVersion] = React.useState('')\r\n\r\n    const getData = async () => {\r\n        const res = await axios.get('https://api.codingthailand.com/api/version')\r\n        setVersion(res.data.data.version)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        \r\n        // async function getData(){\r\n        //     const res = await axios.get('https://api.codingthailand.com/api/version')\r\n        //     setVersion(res.data.data.version)\r\n        // }\r\n\r\n        getData()\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h2>About Us</h2>\r\n                        <p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n                        {\r\n                            version && (\r\n                                <p>\r\n                                    Backend API Version : {version}\r\n                                </p>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage\r\n","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const CLEAR_ALL_CART = 'CLEAR_ALL_CART'\r\n\r\nexport const addToCart = (product = {}, cart = []) => {\r\n\r\n    let exists = false\r\n\r\n    if (cart.length > 0) {\r\n        for (const c of cart) {\r\n            if (c.id === product.id) {\r\n                c.qty++\r\n                exists = true\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!exists) {\r\n        cart.push(product)\r\n    }\r\n\r\n    const total = cart.reduce((totalQty, c) => totalQty + c.qty, 0)\r\n\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            cartlist: cart,\r\n            total: total\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearAllCart = () => {\r\n\r\n    const cart = []\r\n    const total = 0\r\n\r\n    return {\r\n        type: CLEAR_ALL_CART,\r\n        payload: {\r\n            cartlist: cart,\r\n            total: total\r\n        }\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Table, Image, Badge, Spinner } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { format } from 'date-fns'\r\nimport { th } from 'date-fns/locale'\r\nimport { BsEyeFill } from 'react-icons/bs'\r\nimport { Link } from \"react-router-dom\";\r\nimport { addToCart } from '../redux/actions/cartAction'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst ProductPage = () => {\r\n\r\n    const [product, setProduct] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(null)\r\n    const cancelToken = React.useRef(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const cartlist = useSelector((state) => state.cartReducer.cartlist)\r\n    const total = useSelector((state) => state.cartReducer.total)\r\n\r\n    const getData = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const res = await axios.get('https://api.codingthailand.com/api/course',{\r\n                cancelToken: cancelToken.current.token  \r\n            })\r\n            setProduct(res.data.data)\r\n        } catch (error){\r\n            console.log(error)\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        cancelToken.current = axios.CancelToken.source()\r\n        getData()\r\n\r\n        return () =>  {\r\n            // console.log('exit')\r\n            cancelToken.current.cancel()\r\n        }\r\n\r\n    },[])\r\n\r\n    if(loading === true){\r\n        return(\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <p>Have a problem from server,please try again.</p>\r\n                <p>{error.response.data.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const addCart = (p) => {\r\n\r\n        const product = {\r\n            id: p.id,\r\n            name: p.title,\r\n            price: p.view,\r\n            qty: 1\r\n        }\r\n\r\n        dispatch(addToCart(product,cartlist))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h2>Products</h2>\r\n                    {\r\n                        total > 0 && <h4>You chose a products for {total}</h4>\r\n                    }\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Course name</th>\r\n                                <th>Course detail</th>\r\n                                <th>Date create</th>\r\n                                <th>Views</th>\r\n                                <th>Picture</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                product.map((p,index) => {\r\n                                    return (\r\n                                        <tr key={p.id}>\r\n                                            <td>{p.id}</td>\r\n                                            <td>{p.title}</td>\r\n                                            <td>{p.detail}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    format(new Date(p.date), 'dd/MMM/yyyy', {locale: th})\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <Badge variant=\"secondary\">{p.view}</Badge>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Image src={p.picture} rounded alt={p.title} width={100} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={`/detail/${p.id}/title/${p.title}`}>\r\n                                                    <BsEyeFill/>\r\n                                                </Link>\r\n                                                <button className=\"btn btn-outline-success ml-2\" onClick={() => addCart(p)}>\r\n                                                    Pick product\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage\r\n","import React from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { CardDeck, Card, Spinner, Button } from 'react-bootstrap'\r\n\r\nconst DetailPage = () => {\r\n\r\n    const {id, title} = useParams()\r\n    const history = useHistory()\r\n    const [detail, setDetail] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(null)\r\n    const cancelToken = React.useRef(null)\r\n\r\n    const getData = async (id) => {\r\n        try {\r\n            setLoading(true)\r\n            const res = await axios.get('https://api.codingthailand.com/api/course/' + id ,{\r\n                cancelToken: cancelToken.current.token  \r\n            })\r\n            setDetail(res.data.data)\r\n        } catch (error){\r\n            // console.log(error)\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        cancelToken.current = axios.CancelToken.source()\r\n        getData(id)\r\n\r\n        return () =>  {\r\n            // console.log('exit')\r\n            cancelToken.current.cancel()\r\n        }\r\n\r\n    },[id])\r\n\r\n    if(loading === true){\r\n        return(\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <p>Have a problem from server,please try again.</p>\r\n                <p>{error.response.data.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        history.goBack()\r\n                    }}>Back</Button>\r\n          \r\n                    <h2>\r\n                        {title} - {id}\r\n                    </h2>\r\n\r\n                    <div className=\"row mt-4\">\r\n                        {\r\n                            detail.length > 0 ? (\r\n                                <CardDeck>\r\n                                    {\r\n                                        detail.map((d, index) => {\r\n                                            return (\r\n                                                <div className=\"col-md-4\" key={d.ch_id}>\r\n                                                    <Card className=\"mb-4 shadow-sm\">\r\n                                                        <Card.Body>\r\n                                                            <Card.Title>{d.ch_title}</Card.Title>\r\n                                                            <Card.Text>\r\n                                                                {d.ch_dateadd}\r\n                                                            </Card.Text>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </CardDeck>\r\n                            ) : (\r\n                                <div className=\"mx-auto\">Not found data ...</div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n","import React from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport axios from 'axios'\r\nimport { Spinner, Table } from 'react-bootstrap'\r\n\r\nconst pageSize = 10\r\n\r\nconst HospitalPage = () => {\r\n\r\n    const [hospital, setHospital] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(null)\r\n    const cancelToken = React.useRef(null)\r\n\r\n    //Pagination\r\n    const [page, setPage] = React.useState(1)\r\n    const [total, setTotal] = React.useState(0)\r\n\r\n    const getData = async (page) => {\r\n        try {\r\n            setLoading(true)\r\n            const res = await axios.get(\r\n                `https://api.codingthailand.com/api/hospital2?page=${page}&page_size=${pageSize}`,{\r\n                    cancelToken: cancelToken.current.token  \r\n                }\r\n            )\r\n            setHospital(res.data.data)\r\n            setTotal(res.data.meta.pagination.total)\r\n        } catch (error){\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        cancelToken.current = axios.CancelToken.source()\r\n        getData(page)\r\n\r\n        return () =>  {\r\n            cancelToken.current.cancel()\r\n        }\r\n\r\n    },[page])\r\n\r\n    if(loading === true){\r\n        return(\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <p>Have a problem from server,please try again.</p>\r\n                <p>{error.response.data.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n        setPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h2>Hospital Lists</h2>\r\n                    <Table striped bordered hover size=\"sm\" className=\"mt-4\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Code</th>\r\n                                <th>Hospital Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                               hospital.map((h, index) => {\r\n                                    return (\r\n                                        <tr key={h.id}>\r\n                                            <td>{h.id}</td>\r\n                                            <td>{h.code}</td>\r\n                                            <td>{h.h_name}</td>\r\n                                        </tr>\r\n                                    )\r\n                               }) \r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <br />\r\n                    <Pagination\r\n                        activePage={page}\r\n                        itemsCountPerPage={pageSize}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={10}\r\n                        onChange={handlePageChange}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        // firstPageText=\"first\"\r\n                        // lastPageText=\"last\"\r\n                        prevPageText=\"previous\"\r\n                        nextPageText=\"next\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HospitalPage\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { clearAllCart } from '../redux/actions/cartAction'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst CartPage = () => {\r\n\r\n    const cartlist = useSelector((state) => state.cartReducer.cartlist)\r\n    const total = useSelector((state) => state.cartReducer.total)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <h2>Shopping Cart\r\n                        {\r\n                            total > 0 && <span><h4> ( You chose a products for {total} )</h4></span>\r\n                        }\r\n                    </h2>\r\n                    <div className=\"row col-md-12\">\r\n                        <button \r\n                            className=\"btn btn-danger btn-sm mb-3 mr-auto\" \r\n                            onClick={ () => { \r\n                                    dispatch(clearAllCart()) \r\n                                }\r\n                            }\r\n                        >Cencel all</button>\r\n\r\n                        <button \r\n                            className=\"btn btn-info btn-sm mb-3\" \r\n                            onClick={() => {\r\n                                history.push('/pdf')\r\n                            }}\r\n                        >Export PDF</button>\r\n                    </div>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No.</th>\r\n                                <th>Code</th>\r\n                                <th>Course name</th>\r\n                                <th>Total</th>\r\n                                <th>Course price</th>\r\n                                <th>Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                cartlist.map((c,index) => {\r\n                                    return (\r\n                                        <tr key={c.id}>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{c.id}</td>\r\n                                            <td>{c.name}</td>\r\n                                            <td>{c.qty}</td>\r\n                                            <td>{c.price}</td>\r\n                                            <td>{c.price*c.qty}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { Spinner, Table, Button } from 'react-bootstrap'\r\nimport { FiEdit, FiTrash2 } from \"react-icons/fi\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst IndexPage = () => {\r\n\r\n    const [category, setCategory] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [error, setError] = React.useState(null)\r\n    const cancelToken = React.useRef(null)\r\n    const history = useHistory()\r\n\r\n    const getData = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const res = await axios.get(\r\n                `https://api.codingthailand.com/api/category`,\r\n                {\r\n                    cancelToken: cancelToken.current.token  \r\n                }\r\n            )\r\n            setCategory(res.data)\r\n        } catch (error){\r\n            setError(error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        cancelToken.current = axios.CancelToken.source()\r\n        getData()\r\n\r\n        return () =>  {\r\n            cancelToken.current.cancel()\r\n        }\r\n\r\n    },[])\r\n\r\n    if(loading === true){\r\n        return(\r\n            <div className=\"text-center mt-5\">\r\n                <Spinner animation=\"border\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <p>Have a problem from server,please try again.</p>\r\n                <p>{error.response.data.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-12\">\r\n\r\n                    <Button className=\"mt-3 mb-3\" variant=\"success\" onClick={() => history.push('/category/create')}>Add Category</Button>\r\n\r\n                    <h2>Category Lists</h2>\r\n\r\n                    <Table striped bordered hover className=\"mt-4\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Category Name</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                               category.map((c, index) => {\r\n                                    return (\r\n                                        <tr key={c.id}>\r\n                                            <td>{c.id}</td>\r\n                                            <td>{c.name}</td>\r\n                                            <td>\r\n                                                <Button \r\n                                                    className=\"ml-2\" \r\n                                                    variant=\"outline-info\" \r\n                                                    size=\"sm\"\r\n                                                    onClick={() => history.push('/category/edit/' + c.id)}\r\n                                                >\r\n                                                    <FiEdit />\r\n                                                </Button>\r\n                                                <Button \r\n                                                    className=\"ml-2\" \r\n                                                    variant=\"outline-danger\" \r\n                                                    size=\"sm\"\r\n                                                    onClick={async () => {\r\n\r\n                                                        const isConfirm = window.confirm('Are you sure to delete ' + c.name + ' ?')\r\n\r\n                                                        if(isConfirm === true){\r\n                                                            const res = await axios.delete('https://api.codingthailand.com/api/category/' + c.id)\r\n                                                            alert(res.data.message)\r\n                                                            history.go(0)\r\n                                                        }\r\n                                                    }}\r\n                                                >\r\n                                                    <FiTrash2 />\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                               }) \r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexPage\r\n","import React from 'react'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst schema = yup.object().shape({\r\n    newsCatename: yup.string().required('Name news category is required!')\r\n});\r\n\r\nconst CreatePage = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { register, handleSubmit, formState:{ errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        // console.log(data)\r\n        const apiUrl = 'https://api.codingthailand.com/api/category'\r\n\r\n        const res = await axios.post(apiUrl,{\r\n            name : data.newsCatename\r\n        })\r\n\r\n        alert(res.data.message)\r\n        history.replace('/category')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                        <Form.Group controlId=\"newsCatename\">\r\n                            <Form.Label>News Category</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                {...register(\"newsCatename\")} \r\n                                placeholder=\"Enter news category name.\" \r\n                                isInvalid={errors.newsCatename}\r\n                            />\r\n                            {\r\n                                errors.newsCatename && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.newsCatename.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreatePage\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst schema = yup.object().shape({\r\n    newsCatename: yup.string().required('Name news category is required!')\r\n});\r\n\r\nconst EditPage = () => {\r\n\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n\r\n    const { register, handleSubmit, formState:{ errors }, setValue } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    // const getData = async (id) => {\r\n    //     try{\r\n    //         const res = await axios.get('https://api.codingthailand.com/api/category/' + id)\r\n    //         setValue('newsCatename', res.data.name)\r\n    //         setValue('newsCateId', res.data.id)\r\n    //     }catch(error) {\r\n    //         console.log(error)\r\n    //     }\r\n    // }\r\n\r\n    // React.useEffect(() => { \r\n    //     getData(id)\r\n    // },[id])\r\n\r\n    //useCallback\r\n    const getData = React.useCallback(async () => {\r\n        try{\r\n            const res = await axios.get('https://api.codingthailand.com/api/category/' + id)\r\n            setValue('newsCatename', res.data.name)\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    },[id, setValue]) \r\n\r\n    React.useEffect(() => { \r\n        getData()\r\n    },[getData])\r\n\r\n    const onSubmit = async (data) => {\r\n        const apiUrl = 'https://api.codingthailand.com/api/category'\r\n\r\n        const res = await axios.put(apiUrl,{\r\n            id: id,\r\n            name : data.newsCatename\r\n        })\r\n\r\n        alert(res.data.message)\r\n        history.replace('/category')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                     \r\n                        <Form.Group controlId=\"newsCatename\">\r\n                            <Form.Label>News Category</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                {...register(\"newsCatename\")} \r\n                                placeholder=\"Enter news category name.\" \r\n                                isInvalid={errors.newsCatename}\r\n                            />\r\n                            {\r\n                                errors.newsCatename && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.newsCatename.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EditPage\r\n","import React from 'react'\r\nimport { Form, Container, Row, Col} from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/jpg']\r\n\r\nconst UploadPage = () => {\r\n\r\n    const history = useHistory()\r\n    const { addToast } = useToasts();\r\n\r\n    const { handleSubmit, formState:{ errors }, register } = useForm()\r\n\r\n    const onSubmit = (data) => {\r\n        try {\r\n            let imgUpload = data.picture[0]\r\n\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(imgUpload)\r\n            reader.onload = async (e) => {\r\n    \r\n                let base64Img = e.target.result\r\n                const urlAPI = 'https://api.codingthailand.com/api/upload'\r\n                const res = await axios.post(urlAPI,{\r\n                    picture: base64Img\r\n                })\r\n\r\n                addToast(res.data.data.message, { appearance: 'success' });\r\n                history.replace(\"/\")\r\n            }\r\n        } catch (error) {\r\n            addToast(JSON.stringify(error), { appearance: 'error' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h1>Upload Image</h1>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"mb-3 mt-4\">\r\n                            <Form.File>\r\n                                <Form.File.Label>Choose file picture.</Form.File.Label>\r\n                                <Form.File.Input\r\n                                    type=\"file\"\r\n                                    {...register(\"picture\",{\r\n                                        required: '** Please input file picture.',\r\n                                        validate: {\r\n                                            checkFileType: (value) => {\r\n                                                return value && SUPPORTED_IMAGE_FORMATS.includes(value[0].type)\r\n                                            }\r\n                                        }\r\n                                    })}\r\n                                    isInvalid={errors.picture}\r\n                                />\r\n                                {\r\n                                    errors.picture && errors.picture.type === \"required\" && (\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {errors.picture.message}\r\n                                        </Form.Control.Feedback>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    errors.picture && errors.picture.type === \"checkFileType\" && (\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Picture was supported only file type .jpg or jpeg.\r\n                                        </Form.Control.Feedback>\r\n                                    )\r\n                                }\r\n                            </Form.File>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Upload...</button>\r\n                    </Form>\r\n                </Col>\r\n            </Row><hr/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UploadPage\r\n","import React from 'react'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('Name is required!'),\r\n    email: yup.string().required('Email is required!').email('Email format was wrong!'),\r\n    password: yup.string().required('Password is required!').min(3, 'Password character is a minimum of 3')\r\n});\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const history = useHistory()\r\n    const { addToast } = useToasts()\r\n\r\n    const { register, handleSubmit, formState:{ errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        try{\r\n            const apiUrl = 'https://api.codingthailand.com/api/register'\r\n\r\n            const res = await axios.post(apiUrl,{\r\n                name : data.name,\r\n                email: data.email,\r\n                password: data.password\r\n            })\r\n\r\n            addToast(res.data.message, { appearance: 'success' });\r\n            history.replace('/login')\r\n\r\n        }catch(error){\r\n            addToast(error.response.data.errors.email[0], { appearance: 'error' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <h1>Register</h1>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control \r\n                                type=\"text\" \r\n                                {...register(\"name\")} \r\n                                isInvalid={errors.name}\r\n                            />\r\n                            {\r\n                                errors.name && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.name.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control \r\n                                type=\"email\" \r\n                                {...register(\"email\")} \r\n                                isInvalid={errors.email}\r\n                            />\r\n                            {\r\n                                errors.email && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                {...register(\"password\")} \r\n                                isInvalid={errors.password}\r\n                            />\r\n                            {\r\n                                errors.password && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Register\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React from 'react'\r\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\n// import { UserStoreContext } from '../context/UserContext'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateProfile } from '../redux/actions/authAction'\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .required('Email is required!')\r\n        .email('Email format was wrong!'),\r\n    password: yup\r\n        .string()\r\n        .required('Password is required!')\r\n        .min(3, 'Password character is a minimum of 3')\r\n});\r\n\r\nconst LoginPage = () => {\r\n\r\n    const history = useHistory()\r\n    const { addToast } = useToasts()\r\n    // const userStore = React.useContext(UserStoreContext)\r\n    \r\n    //call redux action\r\n    const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, formState:{ errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        try{\r\n            const urlLogin = 'https://api.codingthailand.com/api/login'\r\n\r\n            const res = await axios.post(urlLogin,{\r\n                email: data.email,\r\n                password: data.password\r\n            })\r\n\r\n            //keep token in localstorage convert json to string\r\n            localStorage.setItem('token', JSON.stringify(res.data))\r\n\r\n            //get profie\r\n            const urlProfile = 'https://api.codingthailand.com/api/profile'\r\n            const res_profile = await axios.get(urlProfile,{\r\n                headers: {\r\n                    Authorization: 'Bearer ' + res.data.access_token\r\n                }\r\n            })\r\n\r\n            localStorage.setItem('profile', JSON.stringify(res_profile.data.data.user))\r\n\r\n            addToast(\"Log In success!!!\", { appearance: 'success' });\r\n            // history.replace('/')\r\n            // history.go(0)\r\n\r\n            //update profile by Context\r\n            // const profileVal = JSON.parse(localStorage.getItem('profile'))\r\n            // userStore.updateProfile(profileVal)\r\n            // history.replace('/')\r\n\r\n            //update profile by Redux action\r\n            const profileVal = JSON.parse(localStorage.getItem('profile'))\r\n            dispatch(updateProfile(profileVal))\r\n            history.replace('/')\r\n\r\n        }catch(error){\r\n            addToast(error.response.data.message, { appearance: 'error' });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <h1>Log In</h1>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control \r\n                                type=\"email\" \r\n                                {...register(\"email\")} \r\n                                isInvalid={errors.email}\r\n                            />\r\n                            {\r\n                                errors.email && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.email.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                {...register(\"password\")} \r\n                                isInvalid={errors.password}\r\n                            />\r\n                            {\r\n                                errors.password && (\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.password.message}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\n// import { UserStoreContext } from '../context/UserContext'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst MemberPage = () => {\r\n\r\n    // const userStore = React.useContext(UserStoreContext)\r\n    const profileRedux = useSelector(state => state.authReducer.profile)\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h2>Member Club</h2>\r\n                        {\r\n                            profileRedux && (\r\n                                <div>\r\n                                    <p>Welcome : {profileRedux.name}</p>\r\n                                    <p>Email : {profileRedux.email}</p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        <p></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberPage\r\n","import React from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n\r\n    let isAuth = false\r\n    const token = JSON.parse(localStorage.getItem('token'))\r\n    if(token){\r\n        isAuth = true\r\n    }\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n            isAuth ? (\r\n                children\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n      />\r\n    );\r\n\r\n  }","import React from 'react'\r\n\r\nexport const UserStoreContext = React.createContext()\r\n\r\nconst UserStoreProvider = ({ children }) => {\r\n\r\n    const [profile, setProfile] = React.useState(null)\r\n\r\n    const userStore = {\r\n        profile: profile,\r\n        updateProfile: (profile) => setProfile(profile)\r\n    }\r\n    \r\n    return (\r\n        <UserStoreContext.Provider value={userStore}>\r\n            {children}\r\n        </UserStoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserStoreProvider","import { GET_PROFILE, GET_VERSION } from '../actions/authAction'\r\n\r\nconst initState = {\r\n    profile : null,\r\n    version: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile : action.payload.profile\r\n            }\r\n        case GET_VERSION:\r\n            return{\r\n                ...state,\r\n                version : action.payload.version\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","import { ADD_TO_CART, CLEAR_ALL_CART } from '../actions/cartAction'\r\n\r\nconst initState = {\r\n    cartlist : [],\r\n    total : 0\r\n}\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            return{\r\n                ...state,\r\n                cartlist: action.payload.cartlist,\r\n                total: action.payload.total\r\n            }\r\n        case CLEAR_ALL_CART:\r\n            return{\r\n                ...state,\r\n                cartlist: action.payload.cartlist,\r\n                total: action.payload.total\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cartReducer","import { combineReducers } from 'redux'\r\n\r\nimport authReducer from './authReducer'\r\nimport cartReducer from './cartReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer,\r\n    cartReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\n//intregrate redux thunk\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n \r\nimport rootReducer from './reducers/index'\r\n \r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['cartReducer']\r\n}\r\n \r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n \r\nconst configureStore = () => {\r\n    let store = createStore(persistedReducer, \r\n        composeWithDevTools(\r\n            applyMiddleware(thunk)\r\n        )\r\n    )\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n}\r\n\r\nexport default configureStore","import React from 'react'\r\nimport { \r\n    Page, \r\n    Text, \r\n    View, \r\n    Document, \r\n    StyleSheet, \r\n    PDFViewer, \r\n    Font,\r\n    Image\r\n} from '@react-pdf/renderer';\r\n\r\nimport { \r\n    Table, \r\n    TableHeader, \r\n    TableCell, \r\n    TableBody, \r\n    DataTableCell\r\n} from '@david.kucsai/react-pdf-table'\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        backgroundColor: '#E4E4E4',\r\n        fontFamily: 'Sarabun',\r\n        paddingTop: 35,\r\n        paddingBottom: 65,\r\n        paddingHorizontal: 35\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        marginBottom: 20\r\n    },\r\n    container: {\r\n        alignSelf: 'center',\r\n        marginBottom: 5\r\n    }\r\n});\r\n\r\nFont.register({\r\n    family: 'Sarabun',\r\n    fonts:[\r\n        {\r\n            src: './fonts/Sarabun-Regular.ttf'\r\n        }\r\n    ]\r\n})\r\n\r\nconst PdfReport = () => {\r\n\r\n    const cartLists = useSelector((state) => state.cartReducer.cartlist)\r\n\r\n    return (\r\n        <PDFViewer className=\"container-fluid\" height={600}>\r\n            <Document>\r\n                <Page size=\"A4\" style={styles.page}>\r\n                    <View style={styles.container}>\r\n                        <Image src=\"/logo192.png\" style={{width:50, height: 50}} />\r\n                    </View>\r\n                    <View>\r\n                        <Text style={styles.title}>Shopping cart lists</Text>\r\n                    </View>\r\n                    <Table data={cartLists}>\r\n                        <TableHeader textAlign=\"center\">\r\n                            <TableCell weighting={0.5}>Code</TableCell>\r\n                            <TableCell>Course name</TableCell>\r\n                            <TableCell>Total</TableCell>\r\n                            <TableCell>Course price</TableCell>\r\n                            <TableCell>Amount</TableCell>\r\n                        </TableHeader>\r\n                        <TableBody>\r\n                            <DataTableCell weighting={0.5} style={{textAlign: 'center'}} getContent={(r) => r.id}/>\r\n                            <DataTableCell getContent={(r) => r.name}/>\r\n                            <DataTableCell style={{textAlign: 'center'}} getContent={(r) => r.qty}/>\r\n                            <DataTableCell style={{textAlign: 'center'}} getContent={(r) => r.price}/>\r\n                            <DataTableCell style={{textAlign: 'center'}} getContent={(r) => r.qty * r.price}/>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Page>\r\n            </Document>\r\n        </PDFViewer>\r\n    )\r\n}\r\n\r\nexport default PdfReport\r\n\r\n","import React from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      name: 'Page A',\r\n      uv: 4000,\r\n      pv: 2400,\r\n      amt: 2400,\r\n    },\r\n    {\r\n      name: 'Page B',\r\n      uv: 3000,\r\n      pv: 1398,\r\n      amt: 2210,\r\n    },\r\n    {\r\n      name: 'Page C',\r\n      uv: 2000,\r\n      pv: 9800,\r\n      amt: 2290,\r\n    },\r\n    {\r\n      name: 'Page D',\r\n      uv: 2780,\r\n      pv: 3908,\r\n      amt: 2000,\r\n    },\r\n    {\r\n      name: 'Page E',\r\n      uv: 1890,\r\n      pv: 4800,\r\n      amt: 2181,\r\n    },\r\n    {\r\n      name: 'Page F',\r\n      uv: 2390,\r\n      pv: 3800,\r\n      amt: 2500,\r\n    },\r\n    {\r\n      name: 'Page G',\r\n      uv: 3490,\r\n      pv: 4300,\r\n      amt: 2100,\r\n    },\r\n];\r\n\r\nconst ChartReport = () => {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h2>Tiny Line Chart Example</h2>\r\n                        <LineChart \r\n                            width={500} \r\n                            height={300} \r\n                            data={data}\r\n                        >\r\n                            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" strokeWidth={2} />\r\n                        </LineChart>\r\n                        <h2>Simple Line Chart Example</h2>\r\n                        <LineChart\r\n                            width={500}\r\n                            height={300}\r\n                            data={data}\r\n                            margin={{\r\n                                top: 5,\r\n                                right: 30,\r\n                                left: 20,\r\n                                bottom: 5,\r\n                            }}\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n                        </LineChart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartReport\r\n","import React from \"react\"\nimport Footer from \"./components/Footer\"\nimport NavBar from \"./components/NavBar\"\nimport HomePage from \"./pages/HomePage\"\nimport AboutPage from \"./pages/AboutPage\"\nimport ProductPage from \"./pages/ProductPage\"\nimport DetailPage from \"./pages/DetailPage\"\nimport HospitalPage from \"./pages/hospital/HospitalPage\"\nimport CartPage from './pages/CartPage'\nimport IndexPage from \"./pages/category/IndexPage\"\nimport CreatePage from \"./pages/category/CreatePage\"\nimport EditPage from \"./pages/category/EditPage\"\nimport UploadPage from \"./pages/UploadPage\"\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ToastProvider } from 'react-toast-notifications';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport RegisterPage from \"./pages/RegisterPage\"\nimport LoginPage from \"./pages/LoginPage\"\nimport MemberPage from \"./pages/MemberPage\"\nimport PrivateRoute from \"./guard/auth\"\nimport UserStoreProvider from \"./context/UserContext\"\nimport configureStore from './redux/configureStore'\n\n//redux setup\nimport { Provider } from 'react-redux'\nimport PdfReport from \"./pages/report/PdfReport\"\nimport ChartReport from \"./pages/report/ChartReport\"\n// import { createStore } from 'redux'\n// import rootReducer from './redux/reducers/index'\n// const store = createStore(rootReducer)\n\n//redux-persist setup\nconst { store } = configureStore()\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <UserStoreProvider>\n        <ToastProvider autoDismiss autoDismissTimeout={4000}>\n          <QueryClientProvider client={queryClient}>\n            <Router>\n              <div>\n                <NavBar />\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <HomePage />\n                    </Route>\n                    <Route path=\"/about\">\n                      <AboutPage />\n                    </Route>\n                    <Route path=\"/product\">\n                      <ProductPage />\n                    </Route>\n                    <Route path=\"/detail/:id/title/:title\">\n                      <DetailPage />\n                    </Route>\n                    <Route path=\"/hospital\">\n                      <HospitalPage />\n                    </Route>\n                    <Route path=\"/upload\">\n                      <UploadPage />\n                    </Route>\n                    <Route path=\"/cart\">\n                      <CartPage />\n                    </Route>\n                    <Route path=\"/pdf\">\n                      <PdfReport />\n                    </Route>\n                    <Route path=\"/chart\">\n                      <ChartReport />\n                    </Route>\n\n                    <PrivateRoute path=\"/member\">\n                      <MemberPage />\n                    </PrivateRoute>\n\n                    <Route path=\"/register\">\n                      <RegisterPage />\n                    </Route>\n                    <Route path=\"/login\">\n                      <LoginPage />\n                    </Route>\n\n                    {/* nest route */}\n                    <Route \n                      path=\"/category\"\n                      render={({ match: {url} }) => (\n                        <>\n                          <Route path={`${url}/`} exact><IndexPage /></Route>\n                          <Route path={`${url}/create`}><CreatePage /></Route>\n                          <Route path={`${url}/edit/:id`}><EditPage /></Route>\n                        </>\n                      )}\n                    ></Route> \n\n                  </Switch>\n                <Footer />\n              </div>\n            </Router>\n          </QueryClientProvider>\n        </ToastProvider>\n      </UserStoreProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}